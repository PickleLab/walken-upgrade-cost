import Head from "next/head";

import { useState } from "react";
import { Input } from "../components/Input";

const walkenCostsData = [
  {
    lvl: "1",
    gems: 7,
    wlkn: 1,
  },
  {
    lvl: "2",
    gems: 11,
    wlkn: 3,
  },
  {
    lvl: "3",
    gems: 32,
    wlkn: 20,
  },
  {
    lvl: "4",
    gems: 46,
    wlkn: 52,
  },
  {
    lvl: "5",
    gems: 82,
    wlkn: 123,
  },
  {
    lvl: "6",
    gems: 130,
    wlkn: 200,
  },
  {
    lvl: "7",
    gems: 137,
    wlkn: 210,
  },
  {
    lvl: "8",
    gems: 247,
    wlkn: 415,
  },
  {
    lvl: "9",
    gems: 455,
    wlkn: 780,
  },
  {
    lvl: "10",
    gems: 801,
    wlkn: 1250,
  },
];

export default function Home() {
  const [lvl, setLvl] = useState({
    current: 0,
    target: 0,
    gems: 0,
  });

  const [cost, setCost] = useState({
    gems: 0,
    wlkn: 0,
    level: 0,
  });

  const getValue = (num: number, min: number, max: number) =>
    Math.max(min, Math.min(max, Number(num)));

  const handleLvlChange = (e: any) => {
    const { name, value, min, max } = e.target;
    setLvl((prev) => ({
      ...prev,
      [name]: getValue(value, min, max),
    }));
  };

  const handleCalculate = () => {
    if (lvl.current >= 0 && lvl.target) {
      let gems = 0;
      let wlkn = 0;
      // get the value for target level without the reference
      for (let i = lvl.current; i < lvl.target; i++) {
        gems += walkenCostsData[i].gems;
        wlkn += walkenCostsData[i].wlkn;
      }

      gems -= lvl.gems;

      // get value of the target input
      const target = document.getElementById("target") as HTMLInputElement;
      const targetValue = target.value;

      setCost({
        gems,
        wlkn,
        level: Number(targetValue),
      });
    }

    const result = document.getElementById("result");
    result?.scrollIntoView({ behavior: "smooth" });
  }

  return (
    <div className="bg-offwhite">
      <div className="max-w-7xl px-8 lg:px-16 mx-auto">
        <Head>
          <title>Walken Upgrade Cost Calculator</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/img/walken.svg" />
        </Head>

        <main className="min-h-screen py-1 flex flex-col items-center">
          <div className="header">
            <div className="header__logo">
              <svg
                viewBox="0 0 136 36"
                fill="#F4C76F"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path d="M65.0528 0.027163C64.1244 0.027163 63.3567 0.660966 63.1336 1.59356C63.0532 1.91952 63.0443 2.24547 63.0443 2.49899C63.0443 6.95372 63.0443 11.3994 63.0443 15.8541V23.6227C63.0443 23.6952 63.0443 23.8038 63.0354 23.8491C62.9729 24.1479 62.9015 24.4467 62.839 24.7455C62.6604 25.5694 62.4819 26.4205 62.2677 27.2445C61.9374 28.503 61.5267 29.4537 60.9822 30.2414C60.5983 30.7938 60.2234 31.1197 59.786 31.2736C59.5182 31.3642 59.295 31.4185 59.1254 31.4185C58.9469 31.4185 58.7058 31.4185 58.4737 30.6489L58.4559 30.5765C58.447 30.5402 58.4291 30.504 58.4202 30.4678C58.4023 30.2596 58.3755 30.0422 58.3488 29.8249C58.2863 29.327 58.2327 28.8561 58.2238 28.3944C58.2149 26.4115 58.2149 24.4195 58.2149 22.4366C58.2149 20.9698 58.2149 19.503 58.2059 18.0362C58.2059 17.6107 58.1256 17.167 57.9917 16.7686C57.7328 16.0171 57.1079 15.5463 56.3224 15.501C56.2777 15.501 56.242 15.501 56.2063 15.501C55.4922 15.501 54.8851 15.8813 54.537 16.5423C54.5191 16.5785 54.5013 16.6147 54.4834 16.6509C54.1978 16.5332 53.9121 16.4064 53.6086 16.3068C52.1446 15.7907 50.7877 15.5463 49.4665 15.5463C48.9934 15.5463 48.5114 15.5825 48.0472 15.6459C45.1459 16.0624 42.8875 17.674 41.3253 20.4447C40.0933 22.6268 39.6649 25.1167 40.0576 27.8602C40.3165 29.6801 40.87 31.1831 41.7627 32.4507C43.191 34.4789 45.2263 35.6378 47.8151 35.9185C48.2257 35.9638 48.6274 35.9819 49.0202 35.9819C51.4662 35.9819 53.5818 35.1398 55.3315 33.4738C56.0099 34.5241 56.9919 35.1942 58.2059 35.4115C58.5362 35.4748 58.8755 35.502 59.2057 35.502C60.0895 35.502 60.9554 35.2847 61.7856 34.8592C62.7676 34.3521 63.5799 33.6006 64.294 32.5141C64.6333 33.1207 65.0439 33.664 65.517 34.1348C66.6954 35.3209 68.329 35.9909 69.9805 35.9909C71.2481 35.9909 72.4532 35.6107 73.4709 34.8863C73.7744 34.669 74.06 34.4245 74.3368 34.1529C74.3457 34.2163 74.3546 34.2706 74.3725 34.334C74.5956 35.3028 75.3633 35.9638 76.2917 35.9638C77.2112 35.9638 77.9878 35.3209 78.2289 34.3612C78.2646 34.2072 78.3092 34.0262 78.3092 33.8179C78.3092 33.3561 78.3092 32.9034 78.3092 32.4417C79.9339 33.999 81.6925 35.0583 83.6296 35.674C84.3259 35.8913 85.0044 36 85.6649 36C87.2807 36 88.7179 35.3662 89.9498 34.1076C90.539 33.501 90.9675 32.8219 91.3067 32.1247C92.61 33.9356 94.4579 35.1308 96.8414 35.6922C97.7073 35.8913 98.6178 36 99.5462 36C102.947 36 106.348 34.6418 108.794 32.3692C108.794 32.7676 108.794 33.166 108.803 33.5734C108.803 33.8994 108.848 34.2072 108.919 34.4879C109.134 35.3028 109.794 35.8823 110.589 35.9638C110.651 35.9728 110.714 35.9728 110.776 35.9728C111.58 35.9728 112.285 35.493 112.57 34.7596C112.722 34.3793 112.803 33.9447 112.803 33.5191C112.812 32.3692 112.812 31.2193 112.812 30.0694C112.812 28.5211 112.812 26.9728 112.82 25.4245C112.829 24.7636 112.892 24.2113 113.017 23.7404C113.579 21.5946 114.865 20.3089 116.945 19.7928C117.284 19.7113 117.632 19.666 117.98 19.666C119.614 19.666 121.042 20.6348 121.712 22.1831C122.104 23.0976 122.31 24.0936 122.336 25.2163C122.354 26.0131 122.354 26.8099 122.354 27.5976C122.354 27.9688 122.354 28.3491 122.354 28.7203C122.363 29.8974 122.417 31.165 122.81 32.4417C123.363 34.2616 124.452 35.3752 126.023 35.7646C126.55 35.8913 127.068 35.9638 127.568 35.9638C129.005 35.9638 130.308 35.4296 131.424 34.3612C132.647 33.1932 133.316 31.7264 133.754 30.5855C134.495 28.6569 134.888 26.6469 135.164 24.9447C135.236 24.501 135.325 23.994 135.334 23.4779C135.343 22.663 134.888 21.9748 134.138 21.6942C133.915 21.6127 133.691 21.5674 133.468 21.5674C132.906 21.5674 132.406 21.8209 132.049 22.2917C131.772 22.6539 131.567 23.0885 131.469 23.5231C131.335 24.1117 131.21 24.7093 131.094 25.3068C130.969 25.9135 130.844 26.5201 130.71 27.1177C130.469 28.1499 130.103 29.4809 129.38 30.6308C128.987 31.2465 128.621 31.5996 128.192 31.7626C127.943 31.8531 127.702 31.9074 127.487 31.9074C127.139 31.9074 126.791 31.7988 126.612 31.0382C126.505 30.5493 126.443 30.0332 126.425 29.5171C126.407 28.7113 126.407 27.9054 126.398 27.1087C126.398 26.5292 126.398 25.9406 126.389 25.3612C126.371 23.8763 126.157 22.5362 125.738 21.2777C124.997 19.0503 123.792 17.5201 122.06 16.6056C120.712 15.8994 119.337 15.5372 117.98 15.5372C116.23 15.5372 114.481 16.1258 112.776 17.2938C112.776 17.2757 112.776 17.2666 112.767 17.2485C112.624 16.2706 111.83 15.5915 110.821 15.5915H110.803H110.749C109.75 15.6187 108.955 16.3431 108.821 17.339C108.794 17.5382 108.785 17.7465 108.785 18L108.794 20.6891C108.803 22.0292 108.803 23.3602 108.812 24.7002C108.812 24.8541 108.794 24.9356 108.785 24.9628C108.241 26.8008 107.357 28.2586 106.072 29.4356C104.59 30.7938 102.805 31.5724 100.626 31.826C100.242 31.8712 99.8676 31.8893 99.5194 31.8893C98.5018 31.8893 97.6091 31.7082 96.7789 31.328C94.9935 30.5131 93.9401 29.1097 93.5563 27.0362C93.5117 26.8099 93.4849 26.5835 93.4581 26.339C94.7793 26.493 95.913 26.5654 96.9574 26.5654C97.6269 26.5654 98.2875 26.5382 98.9124 26.4748C100.564 26.3119 101.867 25.9316 103.019 25.2706C104.117 24.6368 104.858 23.831 105.277 22.8078C106.197 20.5352 105.295 17.9547 103.126 16.669C101.805 15.8903 100.403 15.492 98.9481 15.492C98.0197 15.492 97.0735 15.6549 96.1361 15.9809C92.5118 17.2394 90.2623 19.9557 89.4678 24.0664C89.4142 24.329 89.3964 24.5915 89.3785 24.8179C89.3607 25.0262 89.3517 25.2163 89.316 25.3883C89.1018 26.4024 88.8875 27.2897 88.6644 28.1046C88.4412 28.9195 88.1377 29.8612 87.5931 30.6761C87.12 31.3913 86.5398 31.7626 85.7721 31.8712C85.6471 31.8893 85.5132 31.8984 85.3882 31.8984C84.8526 31.8984 84.3081 31.7535 83.7189 31.4547C82.2995 30.7485 81.0051 29.662 79.7375 28.1499C79.184 27.4889 78.7823 26.8732 78.4967 26.2485C78.3271 25.8682 78.3181 25.5423 78.4788 25.1982C78.6127 24.8994 78.7645 24.5915 78.9341 24.3471C80.3267 22.3642 82.1924 20.7706 84.4955 19.6117L84.6651 19.5302C84.8704 19.4306 85.1025 19.3129 85.3346 19.159C86.0845 18.6338 86.388 17.7103 86.0934 16.8592C85.8167 16.0624 85.0847 15.5463 84.2366 15.5463C84.1652 15.5463 84.0938 15.5463 84.0224 15.5553C83.71 15.5915 83.3797 15.673 83.0494 15.8179C81.3622 16.5423 79.7911 17.5744 78.3538 18.9054V16.8048C78.3628 12.4135 78.3628 8.02213 78.3628 3.63984C78.3628 2.95171 78.3271 2.32696 78.2467 1.72938C78.1217 0.760563 77.3362 0.0362173 76.3721 0.00905432H76.3632H76.3185C75.408 0.00905432 74.6224 0.642857 74.3992 1.55734C74.3189 1.90141 74.3011 2.23642 74.3011 2.48994C74.3011 7.83199 74.3011 13.174 74.3011 18.5252V23.7495V23.8129C74.3011 23.8763 74.31 23.9396 74.2921 24.003C74.0422 25.6237 73.7476 26.9276 73.3727 28.1046C73.087 29.001 72.6942 30.0422 71.989 30.9115C71.4534 31.5724 70.7571 31.9346 70.034 31.9346C69.3288 31.9346 68.6414 31.5815 68.1058 30.9296C67.472 30.16 67.1506 29.1821 67.106 27.9326C67.0614 26.7103 67.0703 25.4517 67.0703 24.2384V23.6861C67.0792 20.9517 67.0882 18.2173 67.0971 15.4829C67.1149 11.5805 67.1239 7.67807 67.1328 3.77565C67.1328 3.12374 67.0971 2.45372 67.0167 1.76559C66.9096 0.778672 66.1241 0.0362173 65.151 0L65.0528 0.027163ZM94.2972 22.3642C94.44 22.1469 94.5918 21.9386 94.7703 21.7394C95.8148 20.5624 96.9574 19.8924 98.2697 19.7022C98.4928 19.666 98.716 19.6569 98.9392 19.6569C99.6087 19.6569 100.242 19.8109 100.832 20.1187C100.983 20.2002 101.135 20.2998 101.251 20.4175C101.394 20.5533 101.555 20.7616 101.546 21.0151C101.537 21.2143 101.412 21.4225 101.189 21.5946C100.671 22.002 100.028 22.2374 99.2338 22.328C98.3589 22.4276 97.4395 22.4728 96.5021 22.4728H96.4218C95.7344 22.4728 95.0114 22.4547 94.2972 22.3642ZM48.9756 31.9256C47.9579 31.9256 45.4762 31.5996 44.4139 28.5573C43.6016 26.2394 43.7801 24.0845 44.9406 22.1559C45.9494 20.4809 47.3866 19.666 49.3416 19.666H49.4665C51.1448 19.6932 52.6891 20.164 54.171 21.1056C54.171 21.7394 54.171 22.3823 54.171 23.0161L54.1442 23.8944C54.1442 24.2113 54.1531 24.5282 54.1531 24.836C54.1621 25.5241 54.171 26.1761 54.1353 26.8189C54.0192 28.6117 53.3408 29.9517 52.0464 30.9205C51.2073 31.5634 50.0825 31.9256 48.9756 31.9256Z"></path>
                <path d="M41.9928 0.0163786C41.0644 0.0163786 40.3145 0.595856 39.9842 1.55562L34.0747 18.786L31.3698 26.6814L28.8167 17.8081L24.7461 3.71055L24.6033 3.21256C24.4426 2.65119 24.2819 2.08077 24.0944 1.51034C23.7909 0.60491 22.9875 0.0163786 22.0413 0.00732422C21.1129 0.00732422 20.3005 0.577747 19.9524 1.45602C19.8899 1.60994 19.8453 1.76387 19.8006 1.91779L18.5776 6.17333L17.4529 10.0486L12.6324 26.6905L11.9271 24.6261C9.32943 17.0476 6.72279 9.46911 4.12507 1.89968C4.01795 1.59183 3.88405 1.23871 3.66088 0.921812C3.26809 0.369498 2.69678 0.0616502 2.05404 0.0616502C1.88443 0.0616502 1.70589 0.0797589 1.52736 0.125031C0.661453 0.342335 0.0812075 1.0033 0.00979272 1.85441C-0.0259147 2.30713 0.0365733 2.81417 0.18833 3.26689C1.91121 8.4188 3.65195 13.5617 5.38376 18.7045L6.16932 21.0496L6.61566 22.3625C7.95469 26.3373 9.29372 30.3031 10.6417 34.278C10.7399 34.5587 10.9184 34.9661 11.2219 35.2921C11.6147 35.7086 12.1592 35.953 12.7395 35.953C13.7125 35.953 14.5249 35.283 14.8284 34.2508C16.703 27.7408 18.5866 21.2397 20.4791 14.7387L22.0234 9.42383L26.1744 23.7931L28.3704 31.3987L28.6025 32.2136C28.8078 32.9379 29.0131 33.6532 29.2363 34.3776C29.522 35.3373 30.2897 35.944 31.227 35.9621C32.1822 35.9621 32.9588 35.3917 33.298 34.4772C33.3248 34.4047 33.3516 34.3233 33.3784 34.2418L33.3962 34.1965L43.8942 3.0858C43.9478 2.94093 44.0013 2.75984 44.037 2.56065C44.1531 1.89968 43.9835 1.23871 43.5818 0.74978C43.189 0.288009 42.6087 0.0163786 41.9928 0.0163786Z"></path>
              </svg>
            </div>
            <h1 className="header__title">Upgrade Cost Calculator</h1>
          </div>
          <div className="w-full">
            <img src="/img/pig-2x.png" className="w-80 mx-auto" />
            <div className="bg-white flex flex-col lg:flex-row lg:space-x-4 py-2 px-4 justify-center rounded-xl">
              <Input
                type="number"
                name="current"
                label="Current Level"
                value={lvl.current}
                min={0}
                max={9}
                onChange={(e) => handleLvlChange(e)}
              />
              <Input
                type="number"
                id="target"
                name="target"
                label="Target Level"
                value={lvl.target}
                min={0}
                max={10}
                onChange={(e) => handleLvlChange(e)}
              />
              <Input
                type="number"
                name="gems"
                min={0}
                disabled={lvl.target <= 0}
                max={lvl.current >= 0 ? walkenCostsData[lvl.current].gems : 0}
                label="Current Gems"
                value={lvl.gems}
                onChange={(e) => handleLvlChange(e)}
              />
              <button
                onClick={handleCalculate}
                className="bg-primary my-4 py-2 px-8 uppercase text-white font-semibold rounded-xl"
              >
                Calculate
              </button>
            </div>
            {!!cost.wlkn && (
              <div className="result" id="result">
                <div>You'll need</div>
                <div className="bg-secondary/25 text-secondary p-2 rounded-lg text-center font-semibold w-full">
                  <img className="h-6 w-6 inline mr-2" src="/img/gem.svg" />
                  <span className="result__item__value">{cost.gems}</span>{" "}
                  <span className="result__item__title">Gem(s)</span>
                </div>
                <div className="hidden lg:inline">and</div>
                <div className="bg-primary/25 text-primary p-2 rounded-lg text-center font-semibold w-full">
                  <img className="h-6 w-6 inline mr-2" src="/img/walken.svg" />
                  <span className="result__item__value">{cost.wlkn}</span>{" "}
                  <span className="result__item__title">WLKN</span>{" "}
                </div>
                <span>to upgrade your CAThlete.</span>
              </div>
            )}
          </div>
        </main>
        <footer className="text-center border-t border-gray py-4 text-gray">
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Made with ❤️ by Piccklee#1641
          </a>
        </footer>
      </div>
    </div>
  );
}
